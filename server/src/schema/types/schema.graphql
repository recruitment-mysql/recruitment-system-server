# This file was generated. Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type Branch {
    name: String!
    specific_address: Int!
}

type Candidate {
    candidate_id: String!
    cv_url: String
    degree: Degree
    experience: [CandidateExperience!]
    skills: [Skill!]
    status: Boolean
    total_experience_years: Int
    updated_at: Date
    user_id: Int!
}

type CandidateExperience {
    company: String!
    industry: Industry
    role: String!
    years: Int!
}

type Degree {
    degree_id: Int!
    name: String!
}

type Employer {
    branches: [Branch!]
    city_address: String
    description: String
    employer_id: String!
    industry: Industry
    interest: Interest
    number_of_employees: Int
    social_links: SocialLinks
    status: Boolean
    updated_at: Date
    user_id: Int!
}

type Industry {
    industry_id: Int!
    name: String!
}

type Interest {
    award: String
    insurance: String
    salary: String
}

type Mutation {
    change_password(input: change_password_Input!): SuccessResponse!
    forgot_password(input: forgot_password_input!): SuccessResponse!
    register(input: CreateUserInput!): User!
}

type PageInfo {
    endCursor: Cursor
    hasNextPage: Boolean!
}

type Query {
    getUserProfile(user_id: Int!): UserProfile
    greeting: String!
    login(input: UserLoginInput!): UserLoginResponse!
}

type Skill {
    name: String!
    skill_id: Int!
}

type SocialLinks {
    facebook: String
    linkedin: String
    website: String
}

type User {
    avatar: String
    created_at: Date
    email: String!
    full_name: String
    role: Int!
    updated_at: Date
    user_id: Int!
}

type UserLoginResponse {
    token: String!
    user: User!
}

type UserProfile {
    candidateProfile: Candidate
    employerProfile: Employer
    user: User!
}

enum SuccessResponse {
    success
}

scalar Cursor

scalar Date

scalar JSON

scalar Upload

input CreateUserInput {
    avarta: Upload
    email: String!
    full_name: String!
    password: String!
    role: Int!
}

input PaginationInput {
    after: Cursor
    before: Cursor
    first: Int
    last: Int
}

input UserLoginInput {
    email: String!
    password: String!
}

input change_password_Input {
    password_new: String!
    password_old: String!
}

input forgot_password_input {
    email: String!
}
